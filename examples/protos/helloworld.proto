// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld;

// The greeting service definition.
/*
proto中的service的名字将会被自动设置为一个class；而service中的rpc方法就会成为这个class里的虚函数。
*/
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  // Sends another greeting. be added
  rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}
}


/*
每个message都会被编译器生成一个类，message里的每个字段都会提供访问方法如name() set_name(),字段的名字可以随意设置！
如Hellorequest和HelloReply都会成为一个类，类中有name() set_name() message() set_message()方法，以在server(返回参数)和client（传入参数）文件中使用
*/

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}



service MyGreeter {
  // Sends a greeting
  rpc twoSum (MyRequest) returns (MyReply) {}
}

// The request message containing the user's name.
message MyRequest {
  int32 num1 = 1;
  int32 num2 = 2;
}

// The response message containing the greetings
message MyReply {
  int32 sum = 1;
}